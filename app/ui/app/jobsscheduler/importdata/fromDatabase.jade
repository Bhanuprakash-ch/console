//
   Copyright (c) 2015 Intel Corporation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
//-
h3
    | Import data from your database to TAP

spinner(ng-show='state.isPending()')

.panel.panel-warning(ng-show='state.isError()')
    .panel-heading Error loading content
    .panel-body Service is unavailable

div(ng-if='state.isLoaded()')
    form.form-horizontal(name="importForm" data-ng-submit='submitImport()')
        uib-accordion(close-others="false")
            uib-accordion-group(heading="Job details" is-open="true")
                .form-group
                    label.col-sm-2.control-label(for='jobName') Name
                    .col-sm-10
                        input#jobName.form-control(type='text', data-ng-model='importModel.name'
                            placeholder="Job name..." required)

            uib-accordion-group(heading="Specify connection details" is-open="true")
                .form-group.underlined-group.sub-group
                    .col-lg-2.col-xs-4.label-panel
                        p Specify database address
                        p.or or
                        p Provide JDBC Uri
                    .col-lg-10.col-xs-8
                        .databaseAddress.form-group
                            .col-lg-2.col-md-4
                                label(for='databaseType') Database Type
                                #databaseType.btn-group(uib-dropdown='')
                                    button.btn.btn-default.driver-button(type='button', uib-dropdown-toggle="")
                                        | {{importModel.databaseType.name}}
                                        span.caret
                                    ul.dropdown-menu.dropdown-menu-left.animated.fadeInUpShort(role="menu")
                                        li(ng-repeat='db in databases')
                                            a(ng-click='chooseDatabaseType(db)') {{db.name}}
                            .col-lg-2.col-md-4
                                label(for='driver') JDBC driver
                                #driver.btn-group(uib-dropdown='')
                                    button.btn.btn-default.driver-button(type='button', uib-dropdown-toggle="" required)
                                        | {{importModel.driver.name}} {{importModel.driver.version}}
                                        span.caret
                                    ul.dropdown-menu.dropdown-menu-left.animated.fadeInUpShort(role="menu")
                                        li(ng-repeat='driver in importModel.databaseType.drivers')
                                            a(ng-click='chooseDriver(driver)') {{driver.name}} {{driver.version}}
                            .col-lg-3.col-md-8
                                label(for='host') Host
                                input#host.form-control(type='text', placeholder='Host name...', required,
                                    data-ng-model='importModel.host' ng-change='updateUri()')
                            .col-lg-2.col-md-4
                                label(for='port') Port
                                input#port.form-control(type='number', min='1' max='65535', required,l
                                    data-ng-model='importModel.port' ng-change='updateUri()')
                            .col-lg-3.col-md-12
                                label(for='dbName') Database Name
                                input#dbName.form-control(type='text', placeholder='Database name...', required,
                                data-ng-model='importModel.dbName' ng-change='updateUri()')
                        .jdbcUri
                            label.control-label(for='jdbcUri') JDBC Uri
                            input#jdbcUri.form-control(name="jdbcUri" type='text', placeholder='JDBC connection string...',
                                data-ng-model='importModel.jdbcUri', ng-change='updateDbAddress(importForm)', required,
                                pattern='{{jdbcUriPattern}}')
                            div(ng-messages="importForm.jdbcUri.$error")
                                span.validationMessage(ng-message="pattern")
                                    | Required schema - jdbc:driver://host:port/databaseName
                                span.validationMessage(ng-message="invalidDriver")
                                    | TAP platform do not support provided driver

                .form-group.underlined-group.sub-group
                    .col-lg-2.col-xs-4.label-panel
                        p Authentication
                        p
                            i (optional)
                    .col-lg-10.col-xs-8
                        .group
                            label(for='username') Username
                            input#username.form-control(type='text', data-ng-model='importModel.username')
                        .group
                            label(for='password') Password
                            input#password.form-control(type='password', data-ng-model='importModel.password')

                .form-group.sub-group
                    .col-lg-2.col-xs-4.label-panel
                        p Other
                    .col-lg-10.col-xs-8
                        .group
                            label(for='table') Table
                            input#table.form-control(type='text', data-ng-model='importModel.table' required)
                        .group
                            label(for='schemaName') Schema
                            input#schema.form-control(type='text', data-ng-model='importModel.schema')
                        .group
                            label(for='targetDir') HDFS destination directory
                                #defaultDir.checkbox.c-checkbox
                                    label
                                        input(type="checkbox" ng-model="importModel.useDefaultDir")
                                        span.fa.fa-check
                                        | Use default
                            .input-group
                                span#dirPrefix.input-group-addon(uib-tooltip="{{importModel.dirPrefix}}")
                                    | {{importModel.dirPrefix}}
                                input#targetDir.form-control(type='text', placeholder='Destination dir...',
                                    data-ng-model='importModel.targetDir' ng-disabled='importModel.useDefaultDir'
                                    aria-describedby="dirPrefix")
                        .group
                            label(for='access') Choose import mode
                            #access
                                div(ng-repeat="mode in importModel.importModes")
                                    label.radio.radio-inline
                                        input(type='radio', name='importMode', ng-value='mode.name', ng-model="importModel.mode",
                                            ng-selected="mode.name === importModel.mode")
                                        span.fa.fa-circle
                                        | {{ mode.name }}
                                    span.fa.fa-info-circle(uib-tooltip="{{mode.description}}")
                        .group(ng-if="importModel.mode === 'Incremental'")
                            label(for="incremental") Provide config data for incremental mode:
                            #incremental
                                .form-group
                                    p.col-sm-2.control-label(for="columnName") Column name
                                    .col-sm-10
                                        input#columnName.form-control(type='text', ng-model='importModel.columnName')
                                .form-group
                                    p.col-sm-2.control-label(for="incrementalValue") Value
                                    .col-sm-10
                                        input#incrementalValue.form-control(type='text', ng-model='importModel.incrementalValue')

            uib-accordion-group(heading="Set job schedule" is-open="true")
                .form-group
                    label.col-sm-3.control-label(for='start') Start time
                    .col-sm-7.date
                        date-time-picker#start(ng-model='importModel.schedulerConfig.start' required)
                .form-group
                    label.col-sm-3.control-label(for='end') End time
                    .col-sm-7.date
                        date-time-picker#end(ng-model='importModel.schedulerConfig.end' required)
                .form-group
                    label.col-sm-3.control-label(for='timezone') Timezone
                    .col-sm-9
                        .btn-group(uib-dropdown)
                            button.btn.btn-default.timezone-button(type='button', uib-dropdown-toggle, ng-disabled="!timezones.length")
                                | {{ importModel.schedulerConfig.timezone }}
                                span.caret
                            ul.dropdown-menu.timezones.animated.fadeInUpShort(role="menu")
                                li(ng-repeat="timezone in timezones")
                                    a(ng-click="setTimezone(timezone)") {{timezone}}
                .form-group
                    label.col-sm-3.control-label(for='frequency') Frequency
                    .col-sm-2
                        input#frequency.form-control(type='number', min='0', ng-model='importModel.schedulerConfig.frequency.amount' required)
                    .col-sm-7
                        label.radio-inline(ng-repeat="unit in importModel.frequencyUnits")
                            input(type='radio', name='frequencyUnits', ng-value='unit', ng-model='importModel.schedulerConfig.frequency.unit',
                                ng-selected="unit === importModel.schedulerConfig.frequency.unit")
                            |  {{unit}}
        .form-group
            .col-sm-10
                input.btn.btn-primary(type='submit', value='Import Data', ng-disabled="importModel.$invalid")